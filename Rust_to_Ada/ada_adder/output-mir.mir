// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at src/main.rs:6:11: 6:11
    let _1: i32;                         // in scope 0 at src/main.rs:7:9: 7:10
    let _3: ();                          // in scope 0 at /rustc/7281249a19a9755e9d889ee251ec323629caadab/library/std/src/macros.rs:137:9: 137:62
    let mut _4: std::fmt::Arguments<'_>; // in scope 0 at /rustc/7281249a19a9755e9d889ee251ec323629caadab/library/std/src/macros.rs:137:28: 137:61
    let mut _5: &[&str];                 // in scope 0 at src/main.rs:9:14: 9:20
    let mut _6: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/7281249a19a9755e9d889ee251ec323629caadab/library/std/src/macros.rs:137:28: 137:61
    let _7: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/7281249a19a9755e9d889ee251ec323629caadab/library/std/src/macros.rs:137:28: 137:61
    let _8: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/7281249a19a9755e9d889ee251ec323629caadab/library/std/src/macros.rs:137:28: 137:61
    let mut _9: core::fmt::ArgumentV1<'_>; // in scope 0 at src/main.rs:9:22: 9:41
    let _10: &i32;                       // in scope 0 at src/main.rs:9:22: 9:41
    let _11: i32;                        // in scope 0 at src/main.rs:9:22: 9:41
    scope 1 {
        debug x => _1;                   // in scope 1 at src/main.rs:7:9: 7:10
        let _2: i32;                     // in scope 1 at src/main.rs:8:9: 8:10
        scope 2 {
            debug y => _2;               // in scope 2 at src/main.rs:8:9: 8:10
            let mut _12: &[&str; 2];     // in scope 2 at src/main.rs:9:14: 9:20
            scope 3 {
            }
        }
    }

    bb0: {
        _1 = const 1_i32;                // scope 0 at src/main.rs:7:13: 7:14
        _2 = const 2_i32;                // scope 1 at src/main.rs:8:13: 8:14
        _12 = const _;                   // scope 2 at src/main.rs:9:14: 9:20
                                         // mir::Constant
                                         // + span: src/main.rs:9:14: 9:20
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(main, [], Some(promoted[0])) }
        _5 = _12 as &[&str] (Pointer(Unsize)); // scope 2 at src/main.rs:9:14: 9:20
        _11 = add(_1, _2) -> bb1;        // scope 3 at src/main.rs:9:31: 9:39
                                         // mir::Constant
                                         // + span: src/main.rs:9:31: 9:34
                                         // + literal: Const { ty: unsafe extern "C" fn(i32, i32) -> i32 {add}, val: Value(<ZST>) }
    }

    bb1: {
        _10 = &_11;                      // scope 2 at src/main.rs:9:22: 9:41
        _9 = core::fmt::ArgumentV1::<'_>::new_debug::<i32>(_10) -> bb2; // scope 2 at src/main.rs:9:22: 9:41
                                         // mir::Constant
                                         // + span: src/main.rs:9:22: 9:41
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b i32) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<i32>}, val: Value(<ZST>) }
    }

    bb2: {
        _8 = [move _9];                  // scope 2 at /rustc/7281249a19a9755e9d889ee251ec323629caadab/library/std/src/macros.rs:137:28: 137:61
        _7 = &_8;                        // scope 2 at /rustc/7281249a19a9755e9d889ee251ec323629caadab/library/std/src/macros.rs:137:28: 137:61
        _6 = _7 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 2 at /rustc/7281249a19a9755e9d889ee251ec323629caadab/library/std/src/macros.rs:137:28: 137:61
        _4 = Arguments::<'_>::new_v1(move _5, move _6) -> bb3; // scope 2 at /rustc/7281249a19a9755e9d889ee251ec323629caadab/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/7281249a19a9755e9d889ee251ec323629caadab/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb3: {
        _3 = _print(move _4) -> bb4;     // scope 2 at /rustc/7281249a19a9755e9d889ee251ec323629caadab/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/7281249a19a9755e9d889ee251ec323629caadab/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb4: {
        return;                          // scope 0 at src/main.rs:11:2: 11:2
    }
}

promoted[0] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at src/main.rs:9:14: 9:20
    let mut _1: [&str; 2];               // in scope 0 at src/main.rs:9:14: 9:20

    bb0: {
        _1 = [const "", const "\n"];     // scope 0 at src/main.rs:9:14: 9:20
                                         // mir::Constant
                                         // + span: src/main.rs:9:14: 9:20
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: src/main.rs:9:14: 9:20
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at src/main.rs:9:14: 9:20
        return;                          // scope 0 at src/main.rs:9:14: 9:20
    }
}
