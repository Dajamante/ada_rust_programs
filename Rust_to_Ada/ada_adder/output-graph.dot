digraph Mir_0_5 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn main() -&gt; ()<br align="left"/>let _1: std::boxed::Box&lt;i32&gt;;<br align="left"/>let _2: std::boxed::Box&lt;i32&gt;;<br align="left"/>let _3: *mut i32;<br align="left"/>let mut _4: std::boxed::Box&lt;i32&gt;;<br align="left"/>let _5: *mut i32;<br align="left"/>let mut _6: std::boxed::Box&lt;i32&gt;;<br align="left"/>let _7: ();<br align="left"/>let mut _8: std::fmt::Arguments&lt;'_&gt;;<br align="left"/>let mut _9: &amp;[&amp;str];<br align="left"/>let mut _10: &amp;[core::fmt::ArgumentV1&lt;'_&gt;];<br align="left"/>let _11: &amp;[core::fmt::ArgumentV1&lt;'_&gt;; 1];<br align="left"/>let _12: [core::fmt::ArgumentV1&lt;'_&gt;; 1];<br align="left"/>let mut _13: core::fmt::ArgumentV1&lt;'_&gt;;<br align="left"/>let _14: &amp;i32;<br align="left"/>let _15: i32;<br align="left"/>let mut _16: *mut i32;<br align="left"/>let mut _17: *mut i32;<br align="left"/>let mut _18: &amp;[&amp;str; 2];<br align="left"/>let mut _19: bool;<br align="left"/>let mut _20: bool;<br align="left"/>debug x =&gt; _1;<br align="left"/>debug y =&gt; _2;<br align="left"/>debug x_ptr =&gt; _3;<br align="left"/>debug y_ptr =&gt; _5;<br align="left"/>>;
    bb0__0_5 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_20 = const false<br/>_19 = const false<br/>_20 = const true<br/></td></tr><tr><td align="left">_1 = Box::&lt;i32&gt;::new(const 1_i32)</td></tr></table>>];
    bb1__0_5 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left">_2 = Box::&lt;i32&gt;::new(const 6_i32)</td></tr></table>>];
    bb2__0_5 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">_19 = const true<br/>_20 = const false<br/>_4 = move _1<br/></td></tr><tr><td align="left">_3 = Box::&lt;i32&gt;::into_raw(move _4)</td></tr></table>>];
    bb3__0_5 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">_19 = const false<br/>_6 = move _2<br/></td></tr><tr><td align="left">_5 = Box::&lt;i32&gt;::into_raw(move _6)</td></tr></table>>];
    bb4__0_5 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">_18 = const _<br/>_9 = _18 as &amp;[&amp;str] (Pointer(Unsize))<br/>_16 = _3<br/>_17 = _5<br/></td></tr><tr><td align="left">_15 = add(move _16, move _17)</td></tr></table>>];
    bb5__0_5 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">_14 = &amp;_15<br/></td></tr><tr><td align="left">_13 = core::fmt::ArgumentV1::&lt;'_&gt;::new_debug::&lt;i32&gt;(_14)</td></tr></table>>];
    bb6__0_5 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">_12 = [move _13]<br/>_11 = &amp;_12<br/>_10 = _11 as &amp;[core::fmt::ArgumentV1&lt;'_&gt;] (Pointer(Unsize))<br/></td></tr><tr><td align="left">_8 = Arguments::&lt;'_&gt;::new_v1(move _9, move _10)</td></tr></table>>];
    bb7__0_5 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left">_7 = _print(move _8)</td></tr></table>>];
    bb8__0_5 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">_19 = const false<br/>_20 = const false<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb9__0_5 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">9 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb10__0_5 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">10 (cleanup)</td></tr><tr><td align="left">drop(_2)</td></tr></table>>];
    bb11__0_5 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">11 (cleanup)</td></tr><tr><td align="left">switchInt(_19)</td></tr></table>>];
    bb12__0_5 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">12 (cleanup)</td></tr><tr><td align="left">drop(_1)</td></tr></table>>];
    bb13__0_5 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">13 (cleanup)</td></tr><tr><td align="left">switchInt(_20)</td></tr></table>>];
    bb0__0_5 -> bb1__0_5 [label="return"];
    bb1__0_5 -> bb2__0_5 [label="return"];
    bb1__0_5 -> bb13__0_5 [label="unwind"];
    bb2__0_5 -> bb3__0_5 [label="return"];
    bb2__0_5 -> bb11__0_5 [label="unwind"];
    bb3__0_5 -> bb4__0_5 [label="return"];
    bb3__0_5 -> bb11__0_5 [label="unwind"];
    bb4__0_5 -> bb5__0_5 [label="return"];
    bb4__0_5 -> bb11__0_5 [label="unwind"];
    bb5__0_5 -> bb6__0_5 [label="return"];
    bb5__0_5 -> bb11__0_5 [label="unwind"];
    bb6__0_5 -> bb7__0_5 [label="return"];
    bb6__0_5 -> bb11__0_5 [label="unwind"];
    bb7__0_5 -> bb8__0_5 [label="return"];
    bb7__0_5 -> bb11__0_5 [label="unwind"];
    bb10__0_5 -> bb13__0_5 [label="return"];
    bb11__0_5 -> bb13__0_5 [label="0"];
    bb11__0_5 -> bb10__0_5 [label="otherwise"];
    bb12__0_5 -> bb9__0_5 [label="return"];
    bb13__0_5 -> bb9__0_5 [label="0"];
    bb13__0_5 -> bb12__0_5 [label="otherwise"];
}
